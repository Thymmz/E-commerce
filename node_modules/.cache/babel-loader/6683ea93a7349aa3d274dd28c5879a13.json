{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS_Code\\\\Reactjs\\\\E-commerce website\\\\shop\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/React.createContext(); //Provider\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"increment\");\n    };\n\n    this.decrement = id => {\n      console.log(\"decrement\");\n    };\n\n    this.removeItem = id => {\n      console.log(\"Item removed\");\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["D:/VS_Code/Reactjs/E-commerce website/shop/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","console","log","decrement","removeItem","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { storeProducts, detailProduct } from './data'\r\n\r\nconst ProductContext = React.createContext()\r\n\r\n//Provider\r\n\r\nclass ProductProvider extends Component {\r\n   state = {\r\n      products : [],\r\n      detailProduct: detailProduct,\r\n      cart : [],\r\n      modalOpen: false,\r\n      modalProduct:detailProduct,\r\n      cartSubTotal:0,\r\n      cartTax:0,\r\n      cartTotal:0,\r\n   }\r\n   componentDidMount(){\r\n      this.setProducts()\r\n   }\r\n\r\n   setProducts = () =>{\r\n      let tempProducts = []\r\n      storeProducts.forEach(item=>{\r\n         const singleItem = {...item}\r\n         tempProducts = [...tempProducts,singleItem]\r\n      })\r\n      this.setState(()=>{\r\n         return {products: tempProducts}\r\n      })\r\n   }\r\n\r\n   getItem = id => {\r\n      const product = this.state.products.find(item => item.id === id)\r\n      return product\r\n   }\r\n   \r\n   handleDetail = (id) =>{\r\n      const product = this.getItem(id)\r\n      this.setState(()=>{\r\n         return {detailProduct:product}\r\n      })\r\n   }\r\n\r\n   addToCart = (id) =>{\r\n      let tempProducts = [...this.state.products]\r\n      const index = tempProducts.indexOf(this.getItem(id))\r\n      const product = tempProducts[index]\r\n      product.inCart = true\r\n      product.count = 1\r\n      const price = product.price\r\n      product.total = price\r\n      this.setState(() => {\r\n         return {products: tempProducts, cart:[...this.state.cart, product]}\r\n      }, ()=> {this.addTotals()\r\n      })\r\n   }\r\n\r\n   openModal = id =>{\r\n      const product = this.getItem(id)\r\n      this.setState(()=>{\r\n         return {modalProduct:product,modalOpen:true}\r\n      })\r\n   }\r\n\r\n   closeModal = () => {\r\n      this.setState(()=>{\r\n         return {modalOpen:false}\r\n      })\r\n   }\r\n\r\n   increment = (id)=>{\r\n      console.log(\"increment\")\r\n   }\r\n\r\n   decrement = (id)=>{\r\n      console.log(\"decrement\")\r\n   }\r\n\r\n   removeItem = (id) =>{\r\n      console.log(\"Item removed\")\r\n   }\r\n\r\n   clearCart = () =>{\r\n      this.setState(()=>{\r\n         return {cart : []}\r\n      }, ()=>{\r\n         this.setProducts();\r\n      })\r\n   }\r\n\r\n   addTotals = () =>{\r\n      let subTotal = 0\r\n      this.state.cart.map(item => (subTotal += item.total))\r\n      const tempTax = subTotal * 0.1\r\n      const tax= parseFloat(tempTax.toFixed(2))\r\n      const total = subTotal + tax\r\n      this.setState(()=>{\r\n         return {\r\n            cartSubTotal: subTotal,\r\n            cartTax: tax,\r\n            cartTotal: total\r\n\r\n         }\r\n      })\r\n   } \r\n\r\n   render() {\r\n      return (\r\n         <ProductContext.Provider value={{\r\n            ...this.state,\r\n            handleDetail: this.handleDetail,\r\n            addToCart: this.addToCart,\r\n            openModal:this.openModal,\r\n            closeModal: this.closeModal,\r\n            increment:this.increment,\r\n            decrement:this.decrement,\r\n            removeItem:this.removeItem,\r\n            clearCart:this.clearCart\r\n         }}>\r\n            {this.props.children}\r\n         </ProductContext.Provider>\r\n      )\r\n   }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer\r\n\r\nexport {ProductProvider, ProductConsumer}"]},"metadata":{},"sourceType":"module"}